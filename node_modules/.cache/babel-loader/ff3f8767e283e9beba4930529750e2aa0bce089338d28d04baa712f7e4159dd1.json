{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache) {\n  const _component_NavManu = _resolveComponent(\"NavManu\");\n  const _component_ElementFrame = _resolveComponent(\"ElementFrame\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavManu), _createVNode(_component_ElementFrame), _createElementVNode(\"p\", null, _toDisplayString(_ctx.isMyScroll), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_NavManu","_component_ElementFrame","_createElementVNode","_toDisplayString","_ctx","isMyScroll"],"sources":["/Users/illyach/Desktop/вьюшка/vue-navigate-menu/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <NavManu />\n    <ElementFrame/>\n    <p>{{ isMyScroll }}</p>\n  </div>\n</template>\n\n<script>\n// import MainPage from './components/MainPage.vue'\n// import MainTailwind from './components/MainTailwind.vue';\nimport NavManu from './components/NavManu.vue';\nimport ElementFrame from './components/ElementFrame.vue'\nimport ref\nexport default {\n  name: 'App',\n  components: {\n    NavManu,\n    ElementFrame\n  },\n  setup(){\n      const isMyScroll = ref(false);\n      const handleScroll = () => {\n        isMyScroll.value = window.scrollY === 37.5;\n      }\n\n      onMounted(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return{\n      isMyScroll\n    }\n  },\n  \n}\n\n</script>\n\n<style>\n\n</style>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;;uBAAhBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAAWC,kBAAA,GACXD,YAAA,CAAeE,uBAAA,GACfC,mBAAA,CAAuB,WAAAC,gBAAA,CAAjBC,IAAA,CAAAC,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}