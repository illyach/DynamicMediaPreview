{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavManu = _resolveComponent(\"NavManu\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavManu)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_NavManu"],"sources":["/Users/illyach/Desktop/вьюшка/vue-navigate-menu/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <NavManu />\n  </div>\n</template>\n\n<script>\nimport NavManu from './components/NavManu.vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\nexport default {\n  name: 'App',\n  components: {\n    NavManu,\n    ElementFrame\n  },\n  \n  setup(){\n      const isMyScroll = ref(false);\n      const handleScroll = () => {\n        isMyScroll.value = window.scrollY === 90;\n        console.log(window.scrollY)\n      }\n\n      // provide('isMyScrollData', isMyScroll);\n\n      onMounted(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return{\n      isMyScroll\n    }\n  },\n  \n}\n\n</script>\n\n<style>\n\n</style>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;uBAAhBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAWC,kBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}