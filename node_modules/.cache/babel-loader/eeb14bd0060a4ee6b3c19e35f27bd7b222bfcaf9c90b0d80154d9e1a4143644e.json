{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavManu = _resolveComponent(\"NavManu\");\n  const _component_ElementFrame = _resolveComponent(\"ElementFrame\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavManu), _createVNode(_component_ElementFrame, {\n    isMyScrollProp: $setup.isMyScroll\n  }, null, 8 /* PROPS */, [\"isMyScrollProp\"]), _createElementVNode(\"p\", {\n    style: _normalizeStyle({\n      textAlign: 'center',\n      fontSize: '30px',\n      fontWeight: 'bold',\n      color: $setup.isMyScroll ? 'lightgreen' : 'red'\n    })\n  }, _toDisplayString($setup.isMyScroll), 5 /* TEXT, STYLE */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_NavManu","_component_ElementFrame","isMyScrollProp","$setup","isMyScroll","_createElementVNode","style","_normalizeStyle","textAlign","fontSize","fontWeight","color"],"sources":["/Users/illyach/Desktop/вьюшка/vue-navigate-menu/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <NavManu />\n    <ElementFrame :isMyScrollProp=\"isMyScroll\"/>\n    <p :style=\"{textAlign: 'center',fontSize:'30px', fontWeight:'bold', color: isMyScroll ? 'lightgreen' : 'red'}\">{{ isMyScroll }}</p>\n  </div>\n</template>\n\n<script>\n// import MainPage from './components/MainPage.vue'\n// import MainTailwind from './components/MainTailwind.vue';\nimport NavManu from './components/NavManu.vue';\nimport ElementFrame from './components/ElementFrame.vue'\nimport { ref, onMounted, onUnmounted, provide } from 'vue';\nexport default {\n  name: 'App',\n  components: {\n    NavManu,\n    ElementFrame\n  },\n  \n  setup(){\n      const isMyScroll = ref(false);\n      const handleScroll = () => {\n        isMyScroll.value = window.scrollY === 90;\n        console.log(window.scrollY)\n      }\n\n      provide('isMyScrollData', isMyScroll);\n\n      onMounted(() => {\n      window.addEventListener(\"scroll\", handleScroll);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return{\n      isMyScroll\n    }\n  },\n  \n}\n\n</script>\n\n<style>\n\n</style>\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;;uBAAhBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAAWC,kBAAA,GACXD,YAAA,CAA4CE,uBAAA;IAA7BC,cAAc,EAAEC,MAAA,CAAAC;EAAU,6CACzCC,mBAAA,CAAmI;IAA/HC,KAAK,EAAAC,eAAA;MAAAC,SAAA;MAAAC,QAAA;MAAAC,UAAA;MAAAC,KAAA,EAAkER,MAAA,CAAAC,UAAU;IAAA;sBAA6BD,MAAA,CAAAC,UAAU,wB"},"metadata":{},"sourceType":"module","externalDependencies":[]}